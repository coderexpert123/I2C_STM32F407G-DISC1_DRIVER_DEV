/*
 * stm32f407xx_gpio_driver.h
 *
 *  Created on: Apr 7, 2024
 *      Author: nisha
 */

#ifndef INC_STM32F407XX_GPIO_DRIVER_H_
#define INC_STM32F407XX_GPIO_DRIVER_H_


#include "stm32f407xx.h"

typedef struct {

	uint8_t GPIO_PinNumber		;
	uint8_t GPIO_PinMode 		;
	uint8_t GPIO_PinSpeed 		;
	uint8_t GPIO_PinPUPDControl ;
	uint8_t GPIO_PinOPType  	;
	uint8_t GPIO_PinAltFunMode 	;

}GPIO_PinConfig_t;

typedef struct {

	// pointer to hold the base address of the gpio peripheral
	GPIO_RegDef_t *pGPIOx  ; // this holds the base address of the gpio port to which the pin belongs
	GPIO_PinConfig_t GPIO_PinConfig ; // this holds the pin configuration settings

}GPIO_Handle_t;


// clock control api for gpio
void GPIO_PeripClockControl(GPIO_RegDef_t *pGPIOx , uint8_t EnorDi) ;

// gpio init and deinit apis
void GPIO_Init(GPIO_Handle_t* pGPIOHandle) ;
void GPIO_DeInit(GPIO_RegDef_t *pGPIOx ) ;

// gpio read and write to port or pin
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx , uint8_t PinNumber) ;
uint16_t GPIO_ReadFromInputPort(GPIO_RegDef_t *pGPIOx ) ;
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx , uint8_t PinNumber , uint8_t Value) ;
void GPIO_WriteToOutputPort(GPIO_RegDef_t *pGPIOx ,uint16_t Value ) ;
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx , uint8_t PinNumber ) ;

// gpio IRQ config and handling
void GPIO_IRQConfig(uint8_t IRQ_Number  , uint8_t EnorDi) ;
void GPIO_IRQHandling(uint8_t PinNumber  );
void GPIO_IRQ_ProrityConfig(uint8_t IRQ_Number , uint32_t Interrupt_Prority);



#endif /* INC_STM32F407XX_GPIO_DRIVER_H_ */
